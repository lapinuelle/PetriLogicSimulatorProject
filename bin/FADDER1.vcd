$date
  23:48:33 28/01/2021
$end
$version
  Alexander Lapin Petri Nets Logic Simulator.
$end
$comment
  Any comment text.
$end
$timescale 1ps $end
$scope module logic $end
$var wire 1 !  A $end
$var wire 1 "  B $end
$var wire 1 #  Cin $end
$var wire 1 $  Cout1 $end
$var wire 1 %  Cout2 $end
$var wire 1 &  Cout3 $end
$var wire 1 '  Cout4 $end
$var wire 1 (  Cout5 $end
$var wire 1 )  SUM1 $end
$var wire 1 *  SUM2 $end
$var wire 1 +  SUM3 $end
$var wire 1 ,  SUM4 $end
$var wire 1 -  SUM5 $end
$var wire 1 .  n1 $end
$var wire 1 /  n2 $end
$var wire 1 0  n3 $end
$var wire 1 1  n1 $end
$var wire 1 2  n2 $end
$var wire 1 3  n3 $end
$var wire 1 4  n1 $end
$var wire 1 5  n2 $end
$var wire 1 6  n3 $end
$var wire 1 7  n1 $end
$var wire 1 8  n2 $end
$var wire 1 9  n3 $end
$var wire 1 :  n1 $end
$var wire 1 ;  n2 $end
$var wire 1 <  n3 $end
$upscope $end
$enddefinitions $end
$dumpvars
x! 
x" 
x# 
x$ 
x% 
x& 
x' 
x( 
x) 
x* 
x+ 
x, 
x- 
x. 
x/ 
x0 
x1 
x2 
x3 
x4 
x5 
x6 
x7 
x8 
x9 
x: 
x; 
x< 
$end
#0
0! 
0" 
0# 
x$ 
x% 
x& 
x' 
x( 
x) 
x* 
x+ 
x, 
x- 
x. 
x/ 
x0 
x1 
x2 
x3 
x4 
x5 
x6 
x7 
x8 
x9 
x: 
x; 
x< 
#1000
0! 
0" 
0# 
x$ 
x% 
x& 
x' 
x( 
x) 
x* 
x+ 
x, 
x- 
0. 
x/ 
x0 
01 
x2 
x3 
04 
x5 
x6 
07 
x8 
x9 
0: 
x; 
x< 
