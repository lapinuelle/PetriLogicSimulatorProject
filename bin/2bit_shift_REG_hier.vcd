$date
  02:26:45 23/10/2017
$end
$version
  Alexander Lapin Petri Nets Logic Simulator.
$end
$comment
  Any comment text.
$end
$timescale 1ns $end
$scope module logic $end
$var wire 1 ! C $end
$var wire 1 " D $end
$var wire 1 # Q1 $end
$var wire 1 $ Q2 $end
$var wire 1 % shift_REG_2bits0.d1.net0 $end
$var wire 1 & shift_REG_2bits0.d1.net1 $end
$var wire 1 ' shift_REG_2bits0.d1.net2 $end
$var wire 1 ( shift_REG_2bits0.d1.net3 $end
$var wire 1 ) shift_REG_2bits0.d1.net4 $end
$var wire 1 * shift_REG_2bits0.d1.net5 $end
$var wire 1 + shift_REG_2bits0.d1.net6 $end
$var wire 1 , shift_REG_2bits0.d2.net0 $end
$var wire 1 - shift_REG_2bits0.d2.net1 $end
$var wire 1 . shift_REG_2bits0.d2.net2 $end
$var wire 1 / shift_REG_2bits0.d2.net3 $end
$var wire 1 0 shift_REG_2bits0.d2.net4 $end
$var wire 1 1 shift_REG_2bits0.d2.net5 $end
$var wire 1 2 shift_REG_2bits0.d2.net6 $end
$var wire 1 3 shift_REG_2bits0.nQ1 $end
$var wire 1 4 shift_REG_2bits0.nQ2 $end
$upscope $end
$enddefinitions $end
$dumpvars
x!
x"
x#
x$
x%
x&
x'
x(
x)
x*
x+
x,
x-
x.
x/
x0
x1
x2
x3
x4
$end
#0
0!
0"
x#
x$
1%
0&
1'
1(
0)
0*
0+
x,
x-
x.
x/
x0
01
02
x3
x4
#10
1!
0"
0#
x$
1%
1&
1'
1(
0)
1*
0+
0,
1-
1.
x/
x0
x1
x2
13
x4
#12
0!
0"
0#
x$
1%
0&
1'
1(
0)
0*
0+
0,
0-
0.
1/
10
01
02
13
x4
#15
0!
1"
0#
x$
0%
1&
0'
0(
1)
0*
0+
0,
0-
0.
1/
10
01
02
13
x4
